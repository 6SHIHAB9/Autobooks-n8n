{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "text": "={{ $('Extracts Email and pdf(If there's any pdf)').item.json['Email content'] }}\n\n\n{{ $json.body }}",
        "attributes": {
          "attributes": [
            {
              "name": "Invoice Number",
              "description": "The invoice number(Generally a number or alphanumer)",
              "required": true
            },
            {
              "name": "Invoice Date",
              "type": "date",
              "description": "The date invoice is generated",
              "required": true
            },
            {
              "name": "Due Date",
              "type": "date",
              "description": "The date invoice is due for",
              "required": true
            },
            {
              "name": "Vendors name",
              "description": "Sellers name(company  name or an individual name)",
              "required": true
            },
            {
              "name": "Vendors contact",
              "description": "Sellers phone njumber or email",
              "required": true
            },
            {
              "name": "Item/service",
              "description": "Name of the service/item vendor sold",
              "required": true
            },
            {
              "name": "price",
              "description": "Total price of the invoice",
              "required": true
            },
            {
              "name": "Payment Details",
              "description": "Payment info of the vendor",
              "required": true
            },
            {
              "name": "Notes",
              "description": "Notes of the vendor",
              "required": true
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, you may omit the attribute's value."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        912,
        128
      ],
      "id": "b1aacd7a-56e7-4a1e-806b-643c33c6d920",
      "name": "Information Extractor",
      "alwaysOutputData": false,
      "retryOnFail": true
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-thinking-exp-01-21",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        992,
        272
      ],
      "id": "16362283-f63c-4180-a163-9f1ad43d1da1",
      "name": "Google Gemini Chat Model"
    },
    {
      "parameters": {
        "resource": "bill",
        "operation": "create",
        "Line": [],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.quickbooks",
      "typeVersion": 1,
      "position": [
        1040,
        512
      ],
      "id": "10cfb3c1-18aa-4367-aa21-bd7d4d529519",
      "name": "Create a bill"
    },
    {
      "parameters": {
        "content": "## DATA EXTRACTION MODULE\n\n",
        "height": 400,
        "width": 1232,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "3aa348a8-345c-4727-8ec3-279b2ff3f25a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## ERROR HANDLING MODULE\n\n",
        "height": 448,
        "width": 816,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        448
      ],
      "typeVersion": 1,
      "id": "7d1adbf5-2c59-4c94-85ec-a3e8d277fd8b",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## BILLING MODULE\n",
        "height": 448,
        "width": 320,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        928,
        448
      ],
      "typeVersion": 1,
      "id": "e5222177-ef62-41af-b6ac-e70f571c579f",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {
          "q": "subject:\"invoice\""
        },
        "options": {
          "downloadAttachments": true
        }
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.3,
      "position": [
        48,
        128
      ],
      "id": "9a1fa79b-1ebc-4e6c-9392-f7fff1849566",
      "name": "Recieves invoice"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "attachment_0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        272,
        128
      ],
      "id": "b2704eb9-edd9-498f-8576-a8c9af90d2f7",
      "name": "Extract from pdf if there's a file",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10c0a4b8-1355-438e-a883-98f5e7295c4f",
              "name": "Email content",
              "value": "={{ $('Recieves invoice').item.json.text }}",
              "type": "string"
            },
            {
              "id": "83a97109-bf6a-4016-9789-6747035fea8a",
              "name": "PDF content",
              "value": "={{ $json.error }},{{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        480,
        128
      ],
      "id": "6e5efa59-b8ea-4cca-9cfb-0e1cdeaad5d5",
      "name": "Extracts Email and pdf(If there's any pdf)"
    },
    {
      "parameters": {
        "jsCode": "// The text you want to edit\n\nlet text = $input.first().json['PDF content'];  // replace \"body\" with your field\n\n// The sentence you want to remove\nlet sentenceToRemove = \"This operation expects the node's input data to contain a binary file 'attachment_0', but none was found [item 0],\";\n\n// Replace it if it exists\ntext = text.replace(sentenceToRemove, \"\");\n\n// Optional: clean extra spaces or line breaks\n\n\nreturn [{ json: { body: text } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        688,
        128
      ],
      "id": "05c2e9a7-b61b-4312-acab-fc29d1069ae8",
      "name": "code"
    },
    {
      "parameters": {
        "content": "\n\n**Removes the error message that comes as output from Extract from pdf node if there is no pdf in the email.**\n",
        "height": 400,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        624,
        0
      ],
      "typeVersion": 1,
      "id": "ff014d89-8ce1-4dce-858d-a074fe0fbbac",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8bab95f7-f8cd-4dd5-9738-dd038a22ec9e",
              "leftValue": "={{ $json.output['Invoice Number'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "e01536d5-694e-48e9-8827-b3853c2d7bcf",
              "leftValue": "={{ $json.output['Invoice Date'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "502c7ea1-3a83-41f2-bf72-b8e086c66400",
              "leftValue": "={{ $json.output['Due Date'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "4bba4728-7ab7-4dd5-9ae6-9523ca04bf04",
              "leftValue": "={{ $json.output['Vendors name'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "8820a73b-0079-4d40-b76c-049329ba79f9",
              "leftValue": "={{ $json.output['Vendors contact'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "c1a05fee-f0bf-41bd-ac45-8c248df803fa",
              "leftValue": "={{ $json.output['Item/service'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "8ae695af-9e67-49d1-87a9-d20d9adf44a0",
              "leftValue": "={{ $json.output.price }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "67e7d5fc-8e5c-4b3c-a328-3f1042d53661",
              "leftValue": "={{ $json.output['Payment Details'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "b51d2400-83fe-4284-a71c-9ac6e818d777",
              "leftValue": "={{ $json.output.Notes }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        48,
        528
      ],
      "id": "fc1e3328-3eaa-4c36-aa53-f1159e0eb31f",
      "name": "Checks for missing data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "de567bd5-ecad-4fa4-a4de-3b1db56916d1",
              "name": "Telegram error message",
              "value": "=🚨 Invoice Validation Failed\n\nSome required fields are missing or empty.\n\n🧾 Extracted Invoice Summary:\n• Invoice Number: {{ $json.output['Invoice Number'] }}\n• Invoice Date: {{ $json.output['Invoice Date'] }}\n• Due Date: {{ $json.output['Due Date'] }}\n• Vendor Name: {{ $json.output['Vendors name'] }}\n• Vendor Contact: {{ $json.output['Vendors contact'] }}\n• Item/Service: {{ $json.output['Item/service'] }}\n• Price: {{ $json.output.price }}\n• Payment Details: {{ $json.output['Payment Details'] }}\n• Notes: {{ $json.output.Notes }}\n\n📌 Action: Please review the invoice manually or reprocess the extraction.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        336,
        704
      ],
      "id": "5718fcf5-d8e4-4f5e-a9ca-c02664eb8a5a",
      "name": "set"
    },
    {
      "parameters": {
        "content": "**The message you want to send if there's missing data, It contains the attributes and their data(blank if the data is missing).**\n\n ",
        "height": 320,
        "width": 192,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        288,
        576
      ],
      "typeVersion": 1,
      "id": "00ad2c72-0071-451e-8c40-ddf22bc4b5f2",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "chatId": "<YOUR CHAT ID",
        "text": "={{ $json['Telegram error message'] }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        544,
        704
      ],
      "id": "ffa1c9e4-d919-404d-8b59-ee5c89141720",
      "name": "Send message to human",
      "webhookId": "<YOUR WEBHOOK ID>"
    },
    {
      "parameters": {
        "content": "**Sends the message to the client**\n\nClient can review the invoice and create a bill manually or resend the email with attributes.",
        "height": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        528,
        576
      ],
      "typeVersion": 1,
      "id": "19bf164c-7999-45ba-8a64-af03ccc18bb1",
      "name": "Sticky Note5"
    }
  ],
  "pinData": {},
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Checks for missing data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recieves invoice": {
      "main": [
        [
          {
            "node": "Extract from pdf if there's a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from pdf if there's a file": {
      "main": [
        [
          {
            "node": "Extracts Email and pdf(If there's any pdf)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracts Email and pdf(If there's any pdf)": {
      "main": [
        [
          {
            "node": "code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "code": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Checks for missing data": {
      "main": [
        [
          {
            "node": "Create a bill",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set": {
      "main": [
        [
          {
            "node": "Send message to human",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "",
  "meta": {
    "instanceId": "<YOUR INSTANCE ID>"
  },
  "tags": []
}